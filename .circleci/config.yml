version: 2
jobs:
  #build_dev:
  #  docker:
  #    - image: cimg/node:14.17.0
  #  steps:
  #    - checkout
  #    - run:
  #        name: npm install
  #        command: "sudo npm install"
  #    - run:
  #        name: Run react build
  #        command: "sudo REACT_APP_APIENDPOINT=$APIENDPOINT_DEV REACT_APP_SENTRY_URL=$SENTRY_URL_DEV SKIP_PREFLIGHT_CHECK=true npm run build && sudo mv build/index.html build/200.html"
  #    - run:
  #        name: Deploy app
  #        command: ./node_modules/.bin/surge build --domain $SURGE_DOMAIN_DEV

  build_beta:
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout
      - run:
          name: Set Environment variables
          command: export REACT_APP_APIENDPOINT=$APIENDPOINT_BETA SKIP_PREFLIGHT_CHECK=true
      - run:
          name: Install NodeJS dependencies
          command: npm install
      - run:
          name: Build the React client
          command: npm run build
      - run:
          name: Replace build/200.html with build/index.html
          command: mv build/index.html build/200.html
      - run:
          name: Create CNAME file
          command: touch build/CNAME
      - run:
          name: Configure CNAME file
          command: echo "highestgood.com" > build/CNAME
      - run:
          name: Deploy appbuild_beta
          command: ./node_modules/.bin/surge build --domain $SURGE_DOMAIN_BETA

  build_PROD:
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout
      - run:
          name: npm install
          command: "sudo npm install"
      - run:
          name: Run react build
          command: "sudo REACT_APP_APIENDPOINT=$APIENDPOINT_PROD REACT_APP_SENTRY_URL=$SENTRY_URL_PROD SKIP_PREFLIGHT_CHECK=true npm run build && sudo mv build/index.html build/200.html"
      - run:
          name: Deploy app
          command: ./node_modules/.bin/surge build --domain $SURGE_DOMAIN_PROD
          
  build_development:
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      - run:
          name: Install ubuntu updates
          command: apt-get update && apt-get upgrade -y
      - run:
          name: Install curl and zip
          command: apt-get install curl zip -y
      - run:
          name: Download and execute Node.js 14.x install script from node source
          command: curl -sL https://deb.nodesource.com/setup_14.x | bash -
      - run:
          name: Install Node.js and NPM
          command: apt-get install nodejs -y
      - run:
          name: Download and execute Yarn istallation script
          command: curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarnkey.gpg >/dev/null
      - run:
          name: Add yarn to sources.list
          command: echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | tee /etc/apt/sources.list.d/yarn.list
      - run:
          name: Install yarn
          command: apt-get install yarn -y
      - run:
          name: Install HighestGoodNetworkApp's NodeJS dependencies
          command: npm install
      - run:
          name: Build the React client
          command: export REACT_APP_APIENDPOINT=$APIENDPOINT_DEV REACT_APP_SENTRY_URL=$SENTRY_URL_DEV SKIP_PREFLIGHT_CHECK=true && npm run build
      - run:
          name: Create ZIP archive of build directory
          command: zip -r build.zip build
      - run:
          name: Calculate SHA256 hash of build.zip and place output into build/hash.txt
          command: sha256sum build.zip > build/hash.txt
      - run:
          name: Create 200.html for (required for client-side routing support on Surge)
          command: cp build/index.html build/200.html
      - run:
          name: Deploy compiled app to surge.sh on $SURGE_DOMAIN_DEV
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_DEV --project ./build

workflows:
  version: 2
  build-deploy:
    jobs:
      #- build_dev:
      #    filters:
      #      branches:
      #        only:
      #          - development
      - build_beta:
          filters:
            branches:
              only:
                - main
      - build_PROD:
          filters:
            branches:
              only: master
              
      - build_development:
          filters:
              branches:
                only:
                  - development

